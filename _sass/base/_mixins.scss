/*
 * @Files
 * Mixins Style.
 */

// Color Mixin
// ==========================================================
$colors: (
  "body-color": $body-color
);

// ===============================================
// colors default
// ===============================================
@each $color-name, $color-code in $colors {
  .text-#{$color-name} {
    color: $color-code;
  }

  .text-#{$color-name}-imp {
    color: $color-code !important;
  }

  .bg-#{$color-name} {
    background-color: $color-code;
  }

  .bg-#{$color-name}-imp {
    background-color: $color-code !important;
  }

  .border-#{$color-name} {
    border-color: $color-code;
  }

  .border-#{$color-name}-imp {
    border-color: $color-code !important;
  }

  .pseudo-#{$color-name} {
    &:before {
      background-color: $color-code;
    }
  }

  .pseudo-#{$color-name}-imp {
    &:before {
      background-color: $color-code !important;
    }
  }
}

// 4 Button Hover selector
// ==========================================================
@mixin btn-hover($background-color: false, $border-color: false, $color: false) {
  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  &:hover,
  &:active,
  &:focus {
    @if $background-color {
      background-color: $background-color;
    }

    @if $border-color {
      border-color: $border-color;
    }

    @if $color {
      color: $color;
    }
  }
}

// Appearance
// =======================================================
@mixin appearance($appearance) {
  -webkit-appearance: $appearance;
  -moz-appearance: $appearance;
  -ms-appearance: $appearance;
  appearance: $appearance;
}

// Border Radius
// =======================================================
@mixin border-radius($radius...) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

// circle
// =======================================================
@mixin circle($circle-width) {
  width: $circle-width;
  height: $circle-width;

  @include border-radius($circle-width);
}

// backface visibility
// =======================================================
@mixin backface-visibility {
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  -ms-backface-visibility: hidden;
  -o-backface-visibility: hidden;
}

// keyframes
// Usage-
// @include keyframes(animation);
// @include animation('animation 5s 3');
// =======================================================
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

// Alignment @mixin
@mixin align($vertical: true, $horizontal: false, $position: relative) {
  @if $position {
    position: $position;
  }

  @if $vertical {
    top: 50%;
  }

  @if $horizontal {
    left: 50%;
  }

  @if $vertical and $horizontal {
    transform: translateX(-50%) translateY(-50%);
    -webkit-transform: translateX(-50%) translateY(-50%);
    -ms-transform: translateX(-50%) translateY(-50%);
  }

  @else if $vertical {
    transform: translateY(-50%);
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
  }

  @else {
    transform: translateX(-50%);
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
  }
}

@mixin bg-cover {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
}

// =======================================================
// position
// =======================================================
$position-props: top right bottom left z-index;

@mixin position($position, $val) {
  position: $position;

  @each $props in $position-props {
    $i: index($val, $props);

    @if $i and $i + 1 <= length($val) and type-of(nth($val, $i + 1)) == number {
      #{$props}: nth($val, $i + 1);
    }
  }
}

// position properties
@mixin absolute($val: '') {
  @include position(absolute, $val);
}

@mixin fixed($val: '') {
  @include position(fixed, $val);
}

@mixin relative($val: '') {
  @include position(relative, $val);
}

// transform
// =======================================================
@mixin transform($transforms...) {
  -webkit-transform: $transforms;
  -moz-transform: $transforms;
  -ms-transform: $transforms;
  transform: $transforms;
}

// Rotate
// ===================
@mixin rotate($deg) {
  @include transform(rotate(#{$deg}deg));
}

@mixin rotateX($deg) {
  @include transform(rotateX(#{$deg}deg));
}

@mixin rotateY($deg) {
  @include transform(rotateY(#{$deg}deg));
}

@mixin rotateZ($deg) {
  @include transform(rotateZ(#{$deg}deg));
}

// Flex display
// =======================================================
@mixin flex($justify-content:false, $align-items:false, $flex-flow:false, $align-content:false) {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;

  @if $flex-flow {
    -webkit-flex-flow: $flex-flow;
    -moz-flex-flow: $flex-flow;
    -ms-flex-flow: $flex-flow;
    flex-flow: $flex-flow;
  }

  @if $align-items {
    align-items: $align-items;
  }

  @if $justify-content {
    justify-content: $justify-content;
  }

  @if $align-content {
    -webkit-align-content: $align-content;
    -moz-align-content: $align-content;
    -ms-align-content: $align-content;
    align-content: $align-content;
  }
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align) {
  -webkit-align-items: $align;
  -moz-align-items: $align;
  -ms-align-items: $align;
  align-items: $align;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}

// Overlays
// =======================================================
@mixin overlay($z-index) {
  width: 100%;
  height: 100%;

  @include absolute(top 0 left 0 right 0 bottom 0 z-index $z-index);
}

//Font Sizing
// =======================================================
@function rem($size) {
  $remSize: $size / 16;
  @return #{$remSize}rem;
}

@mixin fontSize($size) {
  // font-size: #{$size}px;
  font-size: rem($size);
}

// Opacity
// ==========================================================
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie);
}

// filter mixin
@mixin filter($filter) {
  -webkit-filter: $filter;
  filter: $filter;
}

// mixin global background-image
// ==========================================================
$global-path: "/assets/images/";

@mixin global-bg-image($img, $background-position, $background-size) {
  background-image: url('#{$global-path}/#{$img}');
  background-repeat: no-repeat;
  background-position: $background-position;
  background-size: $background-size;
}

// Placeholder style
// =======================================================
@mixin optional-at-root($sel) {
  @at-root #{if(not &, $sel, selector-append(&, $sel))} {
    @content;
  }
}

@mixin placeholder {
  @include optional-at-root('::-webkit-input-placeholder') {
    @content;
  }

  @include optional-at-root('::-moz-placeholder') {
    @content;
  }

  @include optional-at-root(':-ms-input-placeholder') {
    @content;
  }

  @include optional-at-root('::-ms-input-placeholder') {
    @content;
  }

  @include optional-at-root('::placeholder') {
    @content;
  }
}

// linear-gradient
// =======================================================
@mixin linear-gradient($args...) {
  background: -o-linear-gradient($args);
  background: -moz-linear-gradient($args);
  background: -webkit-linear-gradient($args);
  background: linear-gradient($args);
}

// Image size as per aspect ratio.
// =======================================================
@mixin aspect-ratio($width, $height) {
  @include relative();
  &:before{
    display: block;
    content: " ";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .content,
  > iframe {
    min-height: 100%;
    min-width: 100%;
    @include absolute(top 0 left 0 right 0 bottom 0);
  }
}

// Truncate multi-line text
// =======================================================
@mixin truncate-lines($line-height, $lines-to-show) {
  display: block; /* Fallback for non-webkit */
  display: -webkit-box;
  max-height: rem($line-height * $lines-to-show); /* Fallback for non-webkit */
  -webkit-line-clamp: $lines-to-show;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Transition mixins
// =======================================================
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}
